// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-playground/validator"
	"github.com/google/wire"
	"go-crud/app"
	"go-crud/controller"
	"go-crud/middleware"
	"go-crud/repository"
	"go-crud/service"
	"net/http"
)

import (
	_ "github.com/go-sql-driver/mysql"
)

// Injectors from injector.go:

func InitializedServer() *http.Server {
	postRepositoryImpl := repository.NewPostRepositoryImpl()
	db := app.NewDB()
	validate := validator.New()
	postServiceImpl := service.NewPostServiceImpl(postRepositoryImpl, db, validate)
	postControllerImpl := controller.NewPostControllerImpl(postServiceImpl)
	router := app.NewRouter(postControllerImpl)
	authMiddleware := middleware.NewAuthMiddleware(router)
	server := NewServer(authMiddleware)
	return server
}

// injector.go:

var postSet = wire.NewSet(repository.NewPostRepositoryImpl, wire.Bind(new(repository.PostRepository), new(*repository.PostRepositoryImpl)), service.NewPostServiceImpl, wire.Bind(new(service.PostService), new(*service.PostServiceImpl)), controller.NewPostControllerImpl, wire.Bind(new(controller.PostController), new(*controller.PostControllerImpl)))
